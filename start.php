
<?php
/*
1. Сделать три любых класса, которые могут взаимодействовать друг с другом (например, Пациент - Врач - Лекарство либо Тренер - Игрок - Футбольный мяч). Классы должны взаимодействовать друг с другом.

Например, мы придумываем сценарий (может быть любым). Допустим "Если доктор прописал пациенту лекарства, то он их выпивает" или "Когда тренер сказал игроку пнуть мяч, мяч катится к воротам" и реализуем это взаимодействие.

Т.е. 
- у Врача должен быть метод "принять пациента", принимающий параметром объект-Пациент.
- Также у Врача должен быть метод "выписать рецепт", принимающий на вход массив объектов-Лекарств и вызывающий у объекта-Пациента метод "принять лекарства", 
- метод "принять лекарства" также принимает от Врача на вход массив объектов-Лекарств и вызывает у каждого лекарства метод "принять лекарство"
- Принятое лекарство говорит "Я выпито" :)

Можете реализовать именно эту цепочку вызовов.

2. Разместите эти классы каждый в отдельном файле и каждому дайте своё пространство имён (у каждого - уникальное). Учитывайте это при обращении к классам.

3. Напишите свой автозагрузчик. Классы должны подключаться только через него.

4. Напишите файл, который прогоняет этот сценарий для разных объектов (грубо, Врачей может быть два, пациентов 2, лекарств сколько хотите и каждый врач каждому пациенту приказывает выпить свой набор).

5. Используйте интерфейсы при передаче параметров-объектов, где это возможно. Каждый класс также должен имплементировать свой интерфейс.

Цель задания - привыкнуть к пространствам имен, попрактиковаться во взаимодействии объектов. Поэтому можете реализовывать именно этот алгоритм.
*/


function doctor($class) {
    include __DIR__ . "\\" . $class . '.php';
	
};
function patient($class) {
	include  __DIR__ . "\\" . $class . '.php';
}
function medicament($class) {
	include __DIR__ . "\\" . $class . '.php';
}


//что и как передается в переменную $class????
spl_autoload_register('doctor');
spl_autoload_register('patient');
spl_autoload_register('medicament');

use \Doctor\Doctor as Doctor;
use \Patient\Patient as Patient;
use \Medicament\Medicament as Medicament;
$myname=new Patient('Стас Михайлов');
$doc=new Doctor('Доктор Петров');
$doc1=new Doctor('Доктор Иванов');
$arr=array(new Medicament('Долобене'),new Medicament('Гевискон'),new Medicament('Парацетамол'));
$arr=array(new Medicament('Амбробене'),new Medicament('Карвалол'),new Medicament('Валидол'));
$doc->takepatient($myname);
$doc->prescription($arr);
$doc1->takepatient($myname);
$doc1->prescription($arr);
